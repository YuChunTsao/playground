(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function l(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(e){if(e.ep)return;e.ep=!0;const n=l(e);fetch(e.href,n)}})();const D=[53,206,255],A=[255,165,0],G=[148,232,165],k=[255,255,255],O="data/point.geojson",I="data/linestring.geojson",C="data/polygon.geojson";let u=null,m=null,f=null;window.onload=async()=>{b(O,"point_information","point.geojson"),b(I,"linestring_information","linestring.geojson"),b(C,"polygon_information","polygon.geojson"),require(["esri/Map","esri/views/MapView","esri/core/reactiveUtils","esri/layers/GeoJSONLayer"],(t,o,l,i)=>{const e={type:"simple",symbol:{type:"simple-marker",color:A,size:5,outline:{color:"white"}}},n={type:"simple",symbol:{type:"simple-line",color:D,width:1}},r={type:"simple",symbol:{type:"simple-fill",color:G,outline:{color:k,width:1}}},d=new i({url:O,renderer:e}),g=new i({url:I,renderer:n}),y=new i({url:C,renderer:r}),v=new t({basemap:"gray-vector",layers:[y,g,d]}),j=new t({basemap:"gray-vector"}),R=11,E=[121.56,25.05],_=new o({container:"view1Div",map:v,center:E,zoom:R});_.ui.move(["zoom"],"bottom-right"),_.when(async()=>{console.log("view1 is ready"),d.visible=!0,g.visible=!1,y.visible=!1});const c=new o({container:"view2Div",map:j,center:E,zoom:R});c.ui.move(["zoom"],"bottom-right"),c.when(async()=>{console.log("view2 is ready");let s=await S();u=s.point,m=s.linestring,f=s.polygon,c.map.add(f),c.map.add(m),c.map.add(u),u.visible=!0,m.visible=!1,f.visible=!1});const w=document.getElementById("pointsLayer"),L=document.getElementById("linestringsLayer"),h=document.getElementById("polygonsLayer");w.addEventListener("change",()=>{d.visible=w.checked,u.visible=w.checked}),L.addEventListener("change",()=>{g.visible=L.checked,m.visible=L.checked}),h.addEventListener("change",()=>{y.visible=h.checked,f.visible=h.checked});const N=[_,c];let a;const P=s=>{if(!(!a||!a.viewpoint||a!==s))for(const p of N)p!==a&&(p.viewpoint=a.viewpoint)};for(const s of N)l.watch(()=>[s.interacting,s.viewpoint],([p,z])=>{p&&(a=s,P(a)),z&&P(s)})})};const F=async t=>(await(await fetch(t)).json()).features.length,b=async(t,o,l)=>{F(t).then(i=>{const e=document.createElement("a");e.href=t,e.textContent=l,e.download=l;const n=document.createElement("a");n.textContent=` (Count: ${i})`;const r=document.getElementById(o);r.appendChild(e),r.appendChild(n)})},S=async()=>{let t=await deck.loadArcGISModules();const o=new t.DeckLayer,l=new t.DeckLayer,i=new t.DeckLayer;let e=new deck.GeoJsonLayer({id:"points",data:O,getFillColor:A,getRadius:3,pointRadiusMinPixels:2,stroked:!0,getLineColor:k,getLineWidth:1,onDataLoad:()=>{console.log("points loaded")},onAfterRender:()=>{console.log("points rendered")}}),n=new deck.GeoJsonLayer({id:"linestrings",data:I,getLineColor:D,getLineWidth:3,lineWidthMinPixels:2,onDataLoad:()=>{console.log("linestrings loaded")},onAfterRender:()=>{console.log("linestrings rendered")}}),r=new deck.GeoJsonLayer({id:"polygons",data:C,getLineColor:k,getFillColor:G,onDataLoad:()=>{console.log("polygons loaded")},onAfterRender:()=>{console.log("polygons rendered")}}),d=setInterval(()=>{e.lifecycle==="Awaiting state"?o.deck.layers=[e]:clearInterval(d)},100),g=setInterval(()=>{n.lifecycle==="Awaiting state"?l.deck.layers=[n]:clearInterval(g)},100),y=setInterval(()=>{r.lifecycle==="Awaiting state"?i.deck.layers=[r]:clearInterval(y)},100);return new Promise(v=>{v({point:o,linestring:l,polygon:i})})};
